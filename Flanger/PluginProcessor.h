/*
  ==============================================================================

    This file was auto-generated by the Introjucer!

    It contains the basic framework code for a JUCE plugin processor.

  ==============================================================================
*/

#ifndef PLUGINPROCESSOR_H_INCLUDED
#define PLUGINPROCESSOR_H_INCLUDED

#include "../JuceLibraryCode/JuceHeader.h"
#include "PluginParameter.h"
#include "DelayL.h"
#include "Mu45LFO.h"


//==============================================================================
/**
*/
class Mu45effectAudioProcessor  : public AudioProcessor
{
public:
    //==============================================================================
    Mu45effectAudioProcessor();
    ~Mu45effectAudioProcessor();

    //==============================================================================
    void prepareToPlay (double sampleRate, int samplesPerBlock) override;
    void releaseResources() override;

    void processBlock (AudioSampleBuffer&, MidiBuffer&) override;

    //==============================================================================
    AudioProcessorEditor* createEditor() override;
    bool hasEditor() const override;

    //==============================================================================
    const String getName() const override;

    bool acceptsMidi() const override;
    bool producesMidi() const override;
    bool silenceInProducesSilenceOut() const override;
    double getTailLengthSeconds() const override;

    //==============================================================================
    int getNumPrograms() override;
    int getCurrentProgram() override;
    void setCurrentProgram (int index) override;
    const String getProgramName (int index) override;
    void changeProgramName (int index, const String& newName) override;

    //==============================================================================
    void getStateInformation (MemoryBlock& destData) override;
    void setStateInformation (const void* data, int sizeInBytes) override;
    
    //Mu45Param: Add a pointer for each user parameter
    //PluginParameter* volumeUParam;
	PluginParameter* wetDryUParam;
	PluginParameter* feedbackUParam;
	PluginParameter* depthUParam;
	PluginParameter* rateUParam;
	PluginParameter* delayUParam;

private:
    //==============================================================================
    JUCE_DECLARE_NON_COPYABLE_WITH_LEAK_DETECTOR (Mu45effectAudioProcessor)
    
    //Mu45: Create any methods you will need
    void calcAlgorithmParams();

	float calcDelaySampsFromMsec(float time);
    
    //Mu45: Create other variables you will need, such as algorithm parameters
	float fs, feedbackAParam, wetAParam, dryAParam, depthAParam, delayAParam;
	Mu45LFO lfoL, lfoR;
	stk::DelayL delayL, delayR;
	
};


#endif  // PLUGINPROCESSOR_H_INCLUDED
